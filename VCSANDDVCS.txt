Version Control System
---------------------------------------

Version Control System (VCS) is a software that helps software developers to
work together and maintain a complete history of their work.
Listed below are the functions of a VCS:
* Allows developers to work simultaneously.
* Does not allow overwriting each otherâ€™s changes.
* Maintains a history of every version.


Following are the types of VCS:
-------------------------------------------------

* Centralized version control system (CVCS).
* Distributed/Decentralized version control system (DVCS).
In this chapter, we will concentrate only on distributed version control system
and especially on Git. Git falls under distributed version control system.


Distributed Version Control System
------------------------------------------

Centralized version control system (CVCS) uses a central server to store all files
and enables team collaboration. But the major drawback of CVCS is its single
point of failure, i.e., failure of the central server. Unfortunately, if the central
server goes down for an hour, then during that hour, no one can collaborate at
all. And even in a worst case, if the disk of the central server gets corrupted and
proper backup has not been taken, then you will lose the entire history of the
project. Here, distributed version control system (DVCS) comes into picture.
DVCS clients not only check out the latest snapshot of the directory but they
also fully mirror the repository. If the sever goes down, then the repository from
any client can be copied back to the server to restore it. Every checkout is a full
backup of the repository. Git does not rely on the central server and that is why
you can perform many operations when you are offline. You can commit
changes, create branches, view logs, and perform other operations when you
are offline. You require network connection only to publish your changes and
take the latest changes.